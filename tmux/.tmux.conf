# My Awesome TMUX config

# Amend ctrl + b to ctrl + a
unbind C-b
set -g prefix C-a

# Set vi mode keys
setw -g mode-keys vi

# Add mouse support
set -g mouse on
# set-option -g mouse on
# set-option -s set-clipboard on
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-yank'

## https://dev.to/iggredible/the-easy-way-to-copy-text-in-tmux-319g#:~:text=To%20enter%20the%20copy%20mode,around%20using%20vim%20navigation%20keys.
bind-key -T copy-mode-vi v send-keys -X begin-selection 
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "yank > #{pane_tty}"
bind 
## https://sunaku.github.io/tmux-yank-osc52.html
# transfer copied text to attached terminal with yank
bind-key -T copy-mode-vi Y send-keys -X copy-pipe 'yank > #{pane_tty}'
bind-key -n C-v paste-buffer

# transfer most-recently copied text to attached terminal with yank
bind-key -n M-y run-shell 'tmux save-buffer - | yank > #{pane_tty}'

# transfer previously copied text (chosen from a menu) to attached terminal
bind-key -n M-Y choose-buffer 'run-shell "tmux save-buffer -b \"%%%\" - | yank > #{pane_tty}"'


# Add external script
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "$yank"
# Tmux buffer to system buffer
# bind-key -t copy-mode-vi y copy-pipe "xclip -sel clip -i"

# enable OSC 52 clipboard
# https://medium.freecodecamp.org/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b
# set -g set-clipboard on 

# Ms modifies OSC 52 clipboard handling to work with mosh, see
# https://gist.github.com/yudai/95b20e3da66df1b066531997f982b57b
# set -ag terminal-overrides "vte*:XT:Ms=\\E]52;c;%p2%s\\7,xterm*:XT:Ms=\\E]52;c;%p2%s\\7"

# use bracketed paste, if the running application (vim/emacs/weechat) has
# sent the terminal code to enable it.
bind-key ] paste-buffer -p

# For vi copy mode bindings
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
# For emacs copy mode bindings
# bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"

# For vi copy mode bindings
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel
# For emacs copy mode bindings
# bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel



# Use | to split the window vertically 
bind | split-window -h -c "#{pane_current_path}"
# Use - to split the window horizontally
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Add vim settings to use hjkl
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Move betewen panes using alt + arrow
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Move between windows using shift + arrow key
bind -n S-Left  previous-window
bind -n S-Right next-window

set-option -g allow-rename off

# length of tmux status line
set -g status-left-length 32 
set -g status-right-length 150

# separators
tm_left_separator='ÓÇ±'
tm_left_separator_black='ÓÇ∞'
tm_right_separator='ÓÇ≥'
tm_right_separator_black='ÓÇ≤'
tm_session_symbol=''

# statusbar colours
set-option -g status-fg colour30 
set-option -g status-bg colour0
# set-option -g status-attr default
set-option -g status-position bottom

#Set the left and right status
set -g status-left '#[bg=colour7]#[fg=colour0]#{?client_prefix,#[bg=colour2],} ‚ùê #S #[bg=colour0]#[fg=colour7]#{?client_prefix,#[fg=colour2],}ÓÇ∞#{?window_zoomed_flag, üîç ,}#[fg=colour1] ‚ô• '

# Right status - include chevron pattern
set -g status-right '#[fg=colour7]ÓÇ≤#[bg=colour7] #[fg=colour0] Host: #(~/.tmux_scripts/net.sh) #[fg=colour0]ÓÇ≤#[bg=colour0]#[fg=colour6]ÓÇ≤#[bg=colour6]#[fg=colour0] Docker: #(~/.tmux_scripts/docker.sh)  #[fg=colour0]ÓÇ≤#[bg=colour0]#[fg=colour3]ÓÇ≤#[bg=colour3]#[fg=colour0] Uptime: #(~/.tmux_scripts/uptime.sh) #[fg=colour0]ÓÇ≤#[bg=colour0]#[fg=colour7]ÓÇ≤#[bg=colour7]#[fg=colour0] %b %d %H:%M '

# customize how windows are displayed in the status line
set -g window-status-current-format "#[fg=colour0]#[bg=colour4]ÓÇ∞#[fg=colour7]#[bg=colour4] #I* ÓÇ±#[fg=colour7] #W #[fg=colour4]#[bg=colour0]ÓÇ∞"
set -g window-status-format "#[fg=colour244]#[bg=colour0]#I-#[fg=colour240] ÓÇ± #W"

# Set the history limit so we get lots of scrollback.
setw -g history-limit 50000


set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @continuum-restore 'on'
set -g @continuum-boot 'on'

set -g @resurrect-save-shell-history 'on'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'

set -g default-terminal "screen-256color"

# Set refresh rate in seconds
set -g status-interval 5


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'
